{"version":3,"sources":["useFetchUsers.js","User.js","SearchForm.js","App.js","index.js"],"names":["ACTIONS","reducer","state","action","type","loading","users","payload","errors","error","User","user","Card","className","Body","Title","name","first","last","phone","email","location","city","country","alt","src","picture","medium","SearchForm","params","onFilterChange","onFilterValueChange","Form","Row","Group","as","Col","Label","Control","onChange","defaultValue","value","searchValue","App","useState","page","console","log","useReducer","dispatch","useEffect","cancelToken","axios","CancelToken","source","get","token","markdown","then","res","data","results","catch","e","isCancel","cancel","useFetchUsers","filteredEmployees","setFilteredEmployees","filterToUse","setFilterToUse","Container","target","param","filter","person","length","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99d94c57.chunk.js","sourcesContent":["\nimport { useEffect, useReducer } from \"react\"\nimport axios from \"axios\"\nconst URL = \"https://randomuser.me/api/?results=50&nat=us\"\n\nconst ACTIONS = {\n    MAKE_REQUEST: 'make-request',\n    GET_DATA: 'get-data',\n    ERROR: 'error'\n}\n\n//action is varable and state is current state\nfunction reducer(state, action) {\n    switch (action.type) {\n        case\n            ACTIONS.MAKE_REQUEST:\n            return { loading: true, users: [] }\n        case\n            ACTIONS.GET_DATA:\n            return { ...state, loading: false, users: action.payload.users }\n        case\n            ACTIONS.ERROR:\n            return { ...state, loading: false, errors: action.payload.error, users: [] }\n        default:\n            return state\n    }\n}\n//Every time change in parmas or anything we have to reload page to repopulate by use of use effect hook.\nexport default function useFetchUsers(params, page) {\n    console.log(\"Fetch users called.\")\n\n    const [state, dispatch] = useReducer(reducer, { users: [], loading: true })\n\n    useEffect(() => {\n        const cancelToken = axios.CancelToken.source()\n        dispatch({ type: ACTIONS.MAKE_REQUEST })\n        axios.get(URL, {\n            cancelToken: cancelToken.token,\n            params: { markdown: true, page: page, ...params }\n        }).then(res => {\n            console.log(res)\n            dispatch({ type: ACTIONS.GET_DATA, payload: { users: res.data.results } })\n        }).catch(e => {\n            if (axios.isCancel(e)) return\n            dispatch({ type: ACTIONS.ERROR, payload: { error: e } })\n        })\n        return () => {\n            cancelToken.cancel()\n        }\n    }, [params, page])\n    return state\n}\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\n\nexport default function User({ user }) {\n    return (\n        // <div>\n        //     <p>user.name.first</p>\n        // </div>\n        <Card className=\"mb-3\">\n            <Card.Body>\n                <div>\n                    <Card.Title>\n                        Employee Name: {user.name.first} {user.name.last}\n                    </Card.Title>\n                </div>\n                <div>\n                    Phone: {user.phone} \n                </div>\n                <div>\n                    Email: {user.email} \n                </div>\n                <div>\n                    Location: {user.location.city}, {user.location.country} \n                </div>\n                <div>\n                    <img alt={user.name}src={user.picture.medium}/>\n                </div>\n            </Card.Body>\n        </Card>\n    )\n}","import React from 'react'\nimport { Col, Form } from 'react-bootstrap'\n\nexport default function SearchForm({ params, onFilterChange, onFilterValueChange }) {\n    return (\n        <Form className=\"mb-4\">\n            <Form.Row>                \n                <Form.Group as={Col}>\n                    <Form.Label>Search By:</Form.Label>\n                    <Form.Control name=\"type\" onChange={onFilterChange} as=\"select\" defaultValue=\"Choose...\">\n                        <option value=\"0\">Choose...</option>\n                        <option value=\"EmployeeName\">Employee name</option>\n                        <option value=\"Location\">Location</option>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group as={Col}>\n                    <Form.Label>Location</Form.Label>                    \n                    <Form.Control onChange={onFilterValueChange} value={params.searchValue} name=\"searchValue\" type=\"text\">\n                    </Form.Control>\n                </Form.Group>\n            </Form.Row>\n        </Form>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\n//import HelloReact from \"./components/React\";\nimport useFetchUsers from \"./useFetchUsers\";\nimport { Container } from \"react-bootstrap\"\nimport User from \"./User\"\nimport SearchForm from \"./SearchForm\";\n\nfunction App() {\n  const [params, setParams] = useState({})\n  const [page] = useState(1)\n  const { users, loading, error } = useFetchUsers(params, page)\n  const [ filteredEmployees, setFilteredEmployees ] = useState(users);\n  const [filterToUse , setFilterToUse]= useState(\"EmployeeName\");\n  useEffect(()=>{\n    setFilteredEmployees(users)\n  },[users])\n  \n  \n  function handleFilterValueChange(e){\n    console.log(\"handleFilterValueChange called.\")\n    const param = e.target.name\n    const value = e.target.value    \n    \n    console.log(`params to add: ${param} ${value}`)    \n    if (filterToUse === \"EmployeeName\"){\n      setFilteredEmployees(\n      users.filter(person =>\n         person.name.first === value\n         || person.name.last === value\n      ))\n    }\n\n    if (filterToUse === \"Location\"){\n      setFilteredEmployees(users.filter(person => person.location.city === value))\n    }\n\n    console.log(\"Total employee count: \" + users.length)\n    console.log(\"Filtered employee count: \" + filteredEmployees.length)\n  }\n\n  function handleFilterChange (e){\n    console.log(\"handleFilterChange called.\")    \n    setFilterToUse(e.target.value) ;\n    console.log(`Filter to use: ${filterToUse}`);\n  }\n\n  return (\n    <Container className=\"my-4\">\n      <h1 className=\"mb-4 p-3 text-center bg-info text-white\">Employee Directory</h1>\n      <SearchForm params={params} onFilterChange={handleFilterChange} onFilterValueChange={handleFilterValueChange}/>\n      {loading && <h1>Loading...</h1>}\n      {error && <h1>Error...</h1>}\n      {filteredEmployees.map(user => {\n        // console.log(user)\n        return <User key={user.email} user={user} />        \n      })}\n    </Container>\n  )\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}