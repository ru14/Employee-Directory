{"version":3,"sources":["useFetchUsers.js","User.js","SearchForm.js","App.js","index.js"],"names":["ACTIONS","reducer","state","action","type","loading","users","payload","errors","error","User","user","Card","className","Body","Title","name","first","last","phone","email","location","city","country","alt","src","picture","medium","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","defaultValue","value","Location","App","useState","setParams","page","useReducer","dispatch","useEffect","cancelToken","axios","CancelToken","source","get","token","markdown","then","res","console","log","data","results","catch","e","isCancel","cancel","useFetchUsers","Container","param","target","prevParams","map","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6c5d016.chunk.js","sourcesContent":["\nimport { useEffect, useReducer } from \"react\"\nimport axios from \"axios\"\nconst URL = \"https://randomuser.me/api/?results=50&nat=us\"\n\nconst ACTIONS = {\n    MAKE_REQUEST: 'make-request',\n    GET_DATA: 'get-data',\n    ERROR: 'error'\n}\n\n//action is varable and state is current state\nfunction reducer(state, action) {\n    switch (action.type) {\n        case\n            ACTIONS.MAKE_REQUEST:\n            return { loading: true, users: [] }\n        case\n            ACTIONS.GET_DATA:\n            return { ...state, loading: false, users: action.payload.users }\n        case\n            ACTIONS.ERROR:\n            return { ...state, loading: false, errors: action.payload.error, users: [] }\n        default:\n            return state\n    }\n}\n//Every time change in parmas or anything we have to reload page to repopulate by use of use effect hook.\nexport default function useFetchUsers(params, page) {\n\n    const [state, dispatch] = useReducer(reducer, { users: [], loading: true })\n\n    useEffect(() => {\n        const cancelToken = axios.CancelToken.source()\n        dispatch({ type: ACTIONS.MAKE_REQUEST })\n        axios.get(URL, {\n            cancelToken: cancelToken.token,\n            params: { markdown: true, page: page, ...params }\n        }).then(res => {\n            console.log(res)\n            dispatch({ type: ACTIONS.GET_DATA, payload: { users: res.data.results } })\n        }).catch(e => {\n            if (axios.isCancel(e)) return\n            dispatch({ type: ACTIONS.ERROR, payload: { error: e } })\n        })\n        return () => {\n            cancelToken.cancel()\n        }\n    }, [params, page])\n    return state\n}\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\n\nexport default function User({ user }) {\n    return (\n        // <div>\n        //     <p>user.name.first</p>\n        // </div>\n        <Card className=\"mb-3\">\n            <Card.Body>\n                <div>\n                    <Card.Title>\n                        Employee Name: {user.name.first} {user.name.last}\n                    </Card.Title>\n                </div>\n                <div>\n                    Phone: {user.phone} \n                </div>\n                <div>\n                    Email: {user.email} \n                </div>\n                <div>\n                    Location: {user.location.city}, {user.location.country} \n                </div>\n                <div>\n                    <img alt={user.name}src={user.picture.medium}/>\n                </div>\n            </Card.Body>\n        </Card>\n    )\n}","import React from 'react'\nimport { Col, Form } from 'react-bootstrap'\n\nexport default function SearchForm(params, onParamChange) {\n    return (\n        <Form className=\"mb-4\">\n            <Form.Row>\n                <Form.Group as={Col}>\n                    <Form.Label>Search By:</Form.Label>\n                    <Form.Control onChange={onParamChange} as=\"select\" defaultValue=\"Choose...\">\n                        <option value=\"0\">Choose...</option>\n                        <option value={params.name}>Employee name</option>\n                        <option value={params.Location}>Location</option>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group as={Col}>\n                    <Form.Label>Search By:</Form.Label>\n                    <Form.Control onChange={onParamChange} value={params.name } type=\"text\">\n                    </Form.Control>\n                </Form.Group>\n            </Form.Row>\n        </Form>\n    )\n}\n","import React, { useState } from \"react\";\n//import HelloReact from \"./components/React\";\nimport useFetchUsers from \"./useFetchUsers\";\nimport { Container } from \"react-bootstrap\"\nimport User from \"./User\"\nimport SearchForm from \"./SearchForm\";\n\nfunction App() {\n  const [params, setParams] = useState({})\n  const [page] = useState(1)\n  const { users, loading, error } = useFetchUsers(params, page)\n\n  function handleParamChange(e){\n    const param = e.target.name\n    const value = e.target.value\n    setParams(prevParams =>{\n      return{...prevParams, [param]: value}\n    })\n  }\n\n\n  return (\n    <Container className=\"my-4\">\n      <h1 className=\"mb-4 p-3 text-center bg-info text-white\">Employee Directory</h1>\n      <SearchForm params={params} onParamChange={handleParamChange}/>\n      {loading && <h1>Loading...</h1>}\n      {error && <h1>Error...</h1>}\n      {users.map(user => {\n        console.log(user)\n        return <User key={user.id} user={user} />\n      })}\n    </Container>\n  )\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}